"use server";

import { db } from '@/app/lib/firebaseAdmin';
import { sendLineMessage } from './lineActions';
// --- [!code focus start] ---
import { Timestamp, FieldPath } from 'firebase-admin/firestore'; // 1. Import FieldPath
// --- [!code focus end] ---

/**
 * Generates and sends a daily report to selected admins.
 */
export async function sendDailyReportNow() {
  try {
    // 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡πÉ‡∏Ñ‡∏£‡∏ö‡πâ‡∏≤‡∏á
    const settingsRef = db.collection('settings').doc('notifications');
    const settingsDoc = await settingsRef.get();
    if (!settingsDoc.exists) {
      throw new Error("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á Report");
    }
    const settingsData = settingsDoc.data();
    const recipientUids = settingsData.reportRecipients;

    if (!recipientUids || recipientUids.length === 0) {
      return { success: true, message: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ" };
    }

    // 2. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• lineUserId ‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö Report
    const adminsRef = db.collection('admins');
    // --- [!code focus start] ---
    // 2. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç query ‡πÉ‡∏´‡πâ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å Document ID ‡πÅ‡∏ó‡∏ô‡∏ü‡∏¥‡∏•‡∏î‡πå 'uid'
    const adminsSnapshot = await adminsRef.where(FieldPath.documentId(), 'in', recipientUids).get();
    // --- [!code focus end] ---
    const recipientLineIds = adminsSnapshot.docs
        .map(doc => doc.data().lineUserId)
        .filter(Boolean);

    if (recipientLineIds.length === 0) {
        return { success: true, message: "‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ Line User ID" };
    }

    // 3. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    const tomorrow = new Date(today);
    tomorrow.setDate(tomorrow.getDate() + 1);

    const bookingsQuery = db.collection('bookings')
      .where('createdAt', '>=', Timestamp.fromDate(today))
      .where('createdAt', '<', Timestamp.fromDate(tomorrow));
      
    const bookingsSnapshot = await bookingsQuery.get();
    const todaysBookings = bookingsSnapshot.docs.map(doc => doc.data());

    // 4. ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const totalBookings = todaysBookings.length;
    const completedBookings = todaysBookings.filter(b => b.status === 'completed').length;
    const cancelledBookings = todaysBookings.filter(b => b.status === 'cancelled').length;
    const totalRevenue = todaysBookings
      .filter(b => b.paymentInfo.paymentStatus === 'paid')
      .reduce((sum, b) => sum + b.paymentInfo.totalPrice, 0);

    // 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Report
    const reportMessage = `üìä Report ‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${today.toLocaleDateString('th-TH')}\n\n` +
      `- ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà: ${totalBookings} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n` +
      `- ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${completedBookings} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n` +
      `- ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å: ${cancelledBookings} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n` +
      `- ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°: ${totalRevenue.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n\n` +
      `(‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏™‡πà‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ)`;

    // 6. ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ
    const sendPromises = recipientLineIds.map(lineId => sendLineMessage(lineId, reportMessage));
    await Promise.all(sendPromises);

    return { success: true, message: `‡∏™‡πà‡∏á Report ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ${recipientLineIds.length} ‡∏Ñ‡∏ô` };

  } catch (error) {
    console.error("Error sending daily report:", error);
    return { success: false, error: error.message };
  }
}