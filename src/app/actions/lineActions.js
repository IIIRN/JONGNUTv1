"use server";

import { Client } from '@line/bot-sdk';
import { db } from '@/app/lib/firebaseAdmin';

const client = new Client({
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.LINE_CHANNEL_SECRET,
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡πÅ‡∏ö‡∏ö‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÅ‡∏≠‡∏õ
function createFlexMessage(type, data) {
  const primaryColor = "#A8999E";
  const primaryDark = "#7F7679";
  const successColor = "#4CAF50";
  const errorColor = "#F28A8A";
  
  switch (type) {
    case 'appointmentConfirmed':
      return {
        type: "flex",
        altText: "‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô",
        contents: {
          type: "bubble",
          header: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: data.pointsAwarded ? "‚ú® ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô" : "‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢",
                weight: "bold",
                color: "#FFFFFF",
                size: "lg"
              }
            ],
            backgroundColor: successColor,
            paddingAll: "20px"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: data.serviceName || "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
                weight: "bold",
                size: "xl",
                color: primaryDark,
                margin: "md"
              },
              {
                type: "separator",
                margin: "lg"
              },
              {
                type: "box",
                layout: "vertical",
                margin: "lg",
                spacing: "sm",
                contents: [
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.date || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.time || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  }
                ].concat(data.pointsAwarded && data.pointsAwarded > 0 ? [
                  {
                    type: "separator",
                    margin: "lg"
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üéâ ‡πÅ‡∏ï‡πâ‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:",
                        color: successColor,
                        size: "sm",
                        flex: 2,
                        weight: "bold"
                      },
                      {
                        type: "text",
                        text: `${data.pointsAwarded} ‡πÅ‡∏ï‡πâ‡∏°`,
                        wrap: true,
                        color: successColor,
                        size: "lg",
                        weight: "bold",
                        flex: 5
                      }
                    ]
                  }
                ] : [])
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            spacing: "sm",
            contents: [
              {
                type: "text",
                text: data.pointsAwarded ? "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞ ‚ú®" : "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞ ‚ú®",
                color: primaryColor,
                size: "sm",
                align: "center"
              }
            ]
          }
        }
      };

    case 'appointmentCancelled':
      return {
        type: "flex",
        altText: "‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
        contents: {
          type: "bubble",
          header: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢",
                weight: "bold",
                color: "#FFFFFF",
                size: "lg"
              }
            ],
            backgroundColor: errorColor,
            paddingAll: "20px"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞",
                weight: "bold",
                size: "lg",
                color: primaryDark
              },
              {
                type: "text",
                text: data.message || "‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
                wrap: true,
                color: "#333333",
                margin: "md"
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô",
                color: primaryColor,
                size: "sm",
                wrap: true,
                align: "center"
              }
            ]
          }
        }
      };

    case 'paymentReceived':
    case 'paymentInvoice':
      return {
        type: "flex",
        altText: type === 'paymentReceived' ? "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô" : "‡πÉ‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
        contents: {
          type: "bubble",
          header: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: type === 'paymentReceived' ? "üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" : "üí∞ ‡πÉ‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
                weight: "bold",
                color: "#FFFFFF",
                size: "lg"
              }
            ],
            backgroundColor: type === 'paymentReceived' ? successColor : primaryColor,
            paddingAll: "20px"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: data.serviceName || "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
                weight: "bold",
                size: "xl",
                color: primaryDark
              },
              {
                type: "separator",
                margin: "lg"
              },
              {
                type: "box",
                layout: "vertical",
                margin: "lg",
                spacing: "sm",
                contents: [
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.date || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üí∞ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: `${(data.amount || data.totalPrice || 0).toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
                        wrap: true,
                        color: "#333333",
                        size: "lg",
                        weight: "bold",
                        flex: 5
                      }
                    ]
                  }
                ]
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            contents: type === 'paymentInvoice' && data.paymentUrl ? [
              {
                type: "button",
                action: {
                  type: "uri",
                  label: "‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
                  uri: data.paymentUrl
                },
                style: "primary",
                color: primaryColor
              }
            ] : [
              {
                type: "text",
                text: type === 'paymentReceived' ? "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞ ‚ú®" : data.paymentUrl ? "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô" : "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏∞",
                color: primaryColor,
                size: "sm",
                wrap: true,
                align: "center"
              }
            ]
          }
        }
      };

    case 'reviewRequest':
      return {
        type: "flex",
        altText: "‡∏Ç‡∏≠‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
        contents: {
          type: "bubble",
          header: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "‚≠ê ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
                weight: "bold",
                color: "#FFFFFF",
                size: "lg"
              }
            ],
            backgroundColor: primaryColor,
            paddingAll: "20px"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏™‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
                weight: "bold",
                size: "lg",
                color: primaryDark
              },
              {
                type: "text",
                text: "‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏≥‡πÑ‡∏õ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏¢‡∏¥‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô",
                wrap: true,
                color: "#333333",
                margin: "md"
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            contents: data.reviewUrl ? [
              {
                type: "button",
                action: {
                  type: "uri",
                  label: "‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏•‡∏¢",
                  uri: data.reviewUrl
                },
                style: "primary",
                color: primaryColor
              }
            ] : [
              {
                type: "text",
                text: "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏∞",
                color: primaryColor,
                size: "sm",
                align: "center"
              }
            ]
          }
        }
      };

    case 'appointmentReminder':
      return {
        type: "flex",
        altText: "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢",
        contents: {
          type: "bubble",
          header: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "üîî ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢",
                weight: "bold",
                color: "#FFFFFF",
                size: "lg"
              }
            ],
            backgroundColor: primaryColor,
            paddingAll: "20px"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "‡∏≠‡∏µ‡∏Å 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏à‡∏∞‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢",
                weight: "bold",
                size: "lg",
                color: primaryDark
              },
              {
                type: "separator",
                margin: "lg"
              },
              {
                type: "box",
                layout: "vertical",
                margin: "lg",
                spacing: "sm",
                contents: [
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üíÖ ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.serviceName || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.appointmentDate || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.appointmentTime || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  }
                ]
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏°‡∏≤‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏∞ ‚ú®",
                color: primaryColor,
                size: "sm",
                align: "center"
              }
            ]
          }
        }
      };

    default:
      // Fallback ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
      return {
        type: "text",
        text: data.message || "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö"
      };
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Admin Flex Message 
function createAdminFlexMessage(type, data) {
  const primaryColor = "#A8999E";
  const primaryDark = "#7F7679"; 
  const successColor = "#4CAF50";
  const warningColor = "#FBC02D";
  const errorColor = "#F28A8A";
  
  switch (type) {
    case 'newBooking':
      return {
        type: "flex",
        altText: "‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà",
        contents: {
          type: "bubble",
          header: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "üÜï ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà",
                weight: "bold", 
                color: "#FFFFFF",
                size: "lg"
              }
            ],
            backgroundColor: successColor,
            paddingAll: "20px"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "box",
                layout: "vertical",
                spacing: "sm",
                contents: [
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üë§ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.customerName || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        weight: "bold",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm", 
                    contents: [
                      {
                        type: "text",
                        text: "üíÖ ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.serviceName || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.appointmentDate || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.appointmentTime || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: `${(data.totalPrice || 0).toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
                        wrap: true,
                        color: successColor,
                        size: "lg",
                        weight: "bold",
                        flex: 5
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      };

    case 'paymentReceived':
      return {
        type: "flex",
        altText: "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
        contents: {
          type: "bubble",
          header: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "üí≥ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
                weight: "bold",
                color: "#FFFFFF", 
                size: "lg"
              }
            ],
            backgroundColor: successColor,
            paddingAll: "20px"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "box",
                layout: "vertical",
                spacing: "sm",
                contents: [
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üë§ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.customerName || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        weight: "bold",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üíÖ ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.serviceName || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: `${(data.totalPrice || 0).toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
                        wrap: true,
                        color: successColor,
                        size: "lg",
                        weight: "bold",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: `${data.appointmentDate} ${data.appointmentTime}` || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      };

    case 'bookingCancelled':
    case 'customerConfirmed':
      const isConfirmed = type === 'customerConfirmed';
      return {
        type: "flex",
        altText: isConfirmed ? "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢" : "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á",
        contents: {
          type: "bubble",
          header: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: isConfirmed ? "‚úÖ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢" : "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á",
                weight: "bold",
                color: "#FFFFFF",
                size: "lg"
              }
            ],
            backgroundColor: isConfirmed ? successColor : errorColor,
            paddingAll: "20px"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "box",
                layout: "vertical",
                spacing: "sm",
                contents: [
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üë§ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.customerName || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        weight: "bold",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üíÖ ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.serviceName || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.appointmentDate || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤:",
                        color: primaryColor,
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: data.appointmentTime || "-",
                        wrap: true,
                        color: "#333333",
                        size: "sm",
                        flex: 5
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      };

    default:
      // Fallback ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
      return {
        type: "text",
        text: data.message || "‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö"
      };
  }
}

/**
 * Fetches and returns the notification settings object.
 */
async function getNotificationSettings() {
  try {
    const settingsRef = db.collection('settings').doc('notifications');
    const settingsDoc = await settingsRef.get();
    
    if (settingsDoc.exists) {
      return settingsDoc.data();
    }
    
    // Default settings if document doesn't exist
    return {
      allNotifications: { enabled: true },
      adminNotifications: { enabled: true, newBooking: true, bookingCancelled: true, paymentReceived: true, customerConfirmed: true },
      customerNotifications: { enabled: true, appointmentConfirmed: true, appointmentCancelled: true, appointmentReminder: true, reviewRequest: true, paymentInvoice: true },
    };
  } catch (error) {
    console.error('Error fetching notification settings:', error);
    // Return default enabled settings on error to avoid blocking critical notifications
    return {
      allNotifications: { enabled: true },
      adminNotifications: { enabled: true },
      customerNotifications: { enabled: true },
    };
  }
}

/**
 * Sends a push message to a single LINE user, checking customer notification settings first.
 * Supports both text and flex messages.
 */
export async function sendLineMessage(to, messageText, notificationType, flexData = null) {
  if (!to || (!messageText && !flexData)) {
    console.error("Missing 'to' or message content");
    return { success: false, error: "Missing recipient or message." };
  }
  
  const settings = await getNotificationSettings();
  if (!settings.allNotifications?.enabled || !settings.customerNotifications?.enabled || (notificationType && !settings.customerNotifications[notificationType])) {
      console.log(`Customer LINE notifications are disabled for type: ${notificationType || 'general'}. Skipping message.`);
      return { success: true, message: "Customer notifications disabled for this type." };
  }

  try {
    let messageObject;
    
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ flexData ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message
    if (flexData && notificationType) {
      messageObject = createFlexMessage(notificationType, flexData);
    } else {
      // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
      messageObject = { type: 'text', text: messageText };
    }
    
    await client.pushMessage(to, messageObject);
    return { success: true };
  } catch (error) {
    console.error(`Failed to send message to ${to}:`, error.originalError?.response?.data || error);
    return { success: false, error: 'Failed to send message' };
  }
}

/**
 * Sends a multicast message to all registered admins, checking admin notification settings first.
 * Supports both text and flex messages.
 */
export async function sendLineMessageToAllAdmins(messageText, notificationType = null, flexData = null) {
  const settings = await getNotificationSettings();
  if (!settings.allNotifications?.enabled || !settings.adminNotifications?.enabled) {
      console.log("Admin LINE notifications are disabled. Skipping message.");
      return { success: true, message: "Admin notifications disabled." };
  }

  try {
    const adminsQuery = db.collection('admins').where("lineUserId", "!=", null);
    const adminSnapshot = await adminsQuery.get();

    if (adminSnapshot.empty) {
      console.warn("No admins with lineUserId found to notify.");
      return { success: true, message: "No admins to notify." };
    }

    const adminLineIds = adminSnapshot.docs.map(doc => doc.data().lineUserId);

    if (adminLineIds.length > 0) {
      let messageObject;
      
      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ flexData ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á Admin Flex Message
      if (flexData && notificationType) {
        messageObject = createAdminFlexMessage(notificationType, flexData);
      } else {
        messageObject = { type: 'text', text: messageText };
      }
      
      await client.multicast(adminLineIds, [messageObject]);
      console.log(`Successfully sent multicast notification to ${adminLineIds.length} admins.`);
    }

    return { success: true };

  } catch (error) {
    console.error('Error sending multicast message to admins:', error.originalError?.response?.data || error);
    return { success: false, error: 'Failed to send message to admins' };
  }
}

/**
 * Send booking notification to admins
 */
export async function sendBookingNotification(bookingData, notificationType) {
  const settings = await getNotificationSettings();
  if (!settings.allNotifications?.enabled || !settings.adminNotifications?.enabled || !settings.adminNotifications?.[notificationType]) {
    console.log(`Admin notification type "${notificationType}" is disabled.`);
    return { success: true, message: "Notification type disabled for admins." };
  }

  const { customerName, serviceName, appointmentDate, appointmentTime, totalPrice } = bookingData;
  
  // ‡πÉ‡∏ä‡πâ Flex Message ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin
  const flexData = {
    customerName,
    serviceName,
    appointmentDate,
    appointmentTime,
    totalPrice
  };

  return await sendLineMessageToAllAdmins(null, notificationType, flexData);
}

/**
 * Send reminder notification to customer
 */
export async function sendReminderNotification(customerLineId, bookingData) {
    const flexData = {
        serviceName: bookingData.serviceName,
        appointmentDate: bookingData.appointmentDate,
        appointmentTime: bookingData.appointmentTime,
        shopName: bookingData.shopName || '‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏ß‡∏¢'
    };
    
    return await sendLineMessage(customerLineId, null, 'appointmentReminder', flexData);
}